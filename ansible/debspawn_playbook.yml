---
- hosts: all
  vars:
    debspawn_git_url: "https://github.com/lkorigin/debspawn.git"
    debootstrap_pkg_url: "https://repo.pureos.net/pureos/pool/main/d/debootstrap/debootstrap_1.0.116pureos1_all.deb"
    keyring_pkg_url: "https://repo.pureos.net/pureos/pool/main/p/pureos-archive-keyring/pureos-archive-keyring_2016.09_all.deb"
    suites:
        landing:
          base: landing
          extra_suites: []
        byzantium:
          base: byzantium
          extra_suites: ["byzantium-updates", "byzantium-security"]
        amber:
          base: amber
          extra_suites: ["amber-updates", "amber-security"]
        amber-proposed-updates:
          base: amber
          extra_suites: ["amber-updates", "amber-security"]
        amber-security:
          base: amber
          extra_suites: ["amber-updates", "amber-proposed-updates"]
        amber-phone-staging:
          base: amber
          extra_suites: ["amber-updates", "amber-security", "amber-phone"]
    mirror: "https://repo.pureos.net/pureos/"
  sudo: yes
  tasks:
    - apt: update_cache=yes upgrade=dist
    - apt: name=git
    - apt: name=xsltproc
    - apt: name=docbook-xsl
    - apt: name=python3-setuptools
    - apt: name=python3-pip
    - apt: name=zstd
    - apt: name=systemd-container
    - apt: name=debootstrap

    - shell: dpkg-architecture -qDEB_BUILD_ARCH
      register: build_arch

    # set up Laniakea DebSpawn Git repository
    - stat: path=/srv/buildd/debspawn-git
      register: debspawn_git

    - name: Update debspawn copy from git master
      shell: git fetch && git reset --hard origin/master
      args:
        chdir: /srv/buildd/debspawn-git
      when: debspawn_git.stat.exists == True

    - name: Clone debspawn from git master
      shell: git clone {{ debspawn_git_url }} debspawn-git
      args:
        chdir: /srv/buildd/
      when: debspawn_git.stat.exists == False

    - name: Install Debspawn
      shell: python3 setup.py build && python3 setup.py install
      args:
        chdir: /srv/buildd/debspawn-git

    # a really, really ugly hack to ensure we have PureOS' debootstrap and keyring
    - name: "HACK: Install Debootstrap from untrusted local package"
      shell: wget {{ debootstrap_pkg_url }} -O debootstrap-new.deb && dpkg -i debootstrap-new.deb && rm debootstrap-new.deb
      args:
          chdir: /tmp
    - name: "HACK: Link 'landing' suite script"
      shell: ln -s amber landing
      args:
        chdir: /usr/share/debootstrap/scripts/
        creates: /usr/share/debootstrap/scripts/landing
    - name: "HACK: Install Keyring from untrusted local package"
      shell: wget {{ keyring_pkg_url }} -O keyring.deb && dpkg -i keyring.deb && rm keyring.deb
      args:
          chdir: /tmp

    - name: Create new debspawn images
      shell: >
        debspawn create --arch={{ build_arch.stdout }}
        --components="main"
        --mirror={{ mirror }}
        --base-suite={{ item.value.base }}
        --extra-suites="{{ item.value.extra_suites | join(' ') }}"
        {{ item.key }}
      with_dict: "{{ suites }}"
      args:
        creates: /var/lib/debspawn/containers/{{ item.key }}-{{ build_arch.stdout }}.tar.zst

    - name: Update debspawn images
      shell: >
        debspawn update --arch={{ build_arch.stdout }}
        {{ item.key }}
      with_dict: "{{ suites }}"

    # allow full /dev access to debspawn containers - this is really ugly, but needed to run vmdb2 in
    # a debspawn container, something which is made use of.
    - file: state=directory path=/etc/debspawn/
    - template: dest=/etc/debspawn/global.json src=debspawn/global.json.j2

    - name: Allow lkspark to run debspawn
      copy:
          dest: /etc/sudoers.d/lkspark
          content: |
              lkspark ALL=(ALL) NOPASSWD: /usr/local/bin/debspawn
